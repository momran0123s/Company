// <auto-generated />
using System;
using Company.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Company.Migrations
{
    [DbContext(typeof(CompanyContext))]
    partial class CompanyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Company.Models.Department", b =>
                {
                    b.Property<int>("Dnum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dnum"));

                    b.Property<string>("DName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MGRSSN")
                        .HasColumnType("int");

                    b.Property<DateTime>("MGRStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Dnum");

                    b.HasIndex("MGRSSN")
                        .IsUnique()
                        .HasFilter("[MGRSSN] IS NOT NULL");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Company.Models.Dependant", b =>
                {
                    b.Property<int?>("ESSN")
                        .HasColumnType("int");

                    b.Property<string>("DependentName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ESSN", "DependentName");

                    b.ToTable("Dependants");
                });

            modelBuilder.Entity("Company.Models.Employee", b =>
                {
                    b.Property<int>("SSN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SSN"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Dno")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Superssn")
                        .HasColumnType("int");

                    b.HasKey("SSN");

                    b.HasIndex("Dno");

                    b.HasIndex("Superssn");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Company.Models.Project", b =>
                {
                    b.Property<int>("PNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PNumber"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Dnum")
                        .HasColumnType("int");

                    b.Property<string>("PLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PNumber");

                    b.HasIndex("Dnum");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Company.Models.WorksFor", b =>
                {
                    b.Property<int?>("ESSn")
                        .HasColumnType("int");

                    b.Property<int?>("Pno")
                        .HasColumnType("int");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.HasKey("ESSn", "Pno");

                    b.HasIndex("Pno");

                    b.ToTable("worksFor");
                });

            modelBuilder.Entity("Company.Models.Department", b =>
                {
                    b.HasOne("Company.Models.Employee", "MGREmp")
                        .WithOne("departmentManaged")
                        .HasForeignKey("Company.Models.Department", "MGRSSN");

                    b.Navigation("MGREmp");
                });

            modelBuilder.Entity("Company.Models.Dependant", b =>
                {
                    b.HasOne("Company.Models.Employee", "employee")
                        .WithMany("dependants")
                        .HasForeignKey("ESSN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("Company.Models.Employee", b =>
                {
                    b.HasOne("Company.Models.Department", "departmentAssigned")
                        .WithMany("employees")
                        .HasForeignKey("Dno");

                    b.HasOne("Company.Models.Employee", "MGREmp")
                        .WithMany("Employees")
                        .HasForeignKey("Superssn");

                    b.Navigation("MGREmp");

                    b.Navigation("departmentAssigned");
                });

            modelBuilder.Entity("Company.Models.Project", b =>
                {
                    b.HasOne("Company.Models.Department", "department")
                        .WithMany("projects")
                        .HasForeignKey("Dnum");

                    b.Navigation("department");
                });

            modelBuilder.Entity("Company.Models.WorksFor", b =>
                {
                    b.HasOne("Company.Models.Employee", "employee")
                        .WithMany("worksFors")
                        .HasForeignKey("ESSn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Company.Models.Project", "project")
                        .WithMany("worksFors")
                        .HasForeignKey("Pno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");

                    b.Navigation("project");
                });

            modelBuilder.Entity("Company.Models.Department", b =>
                {
                    b.Navigation("employees");

                    b.Navigation("projects");
                });

            modelBuilder.Entity("Company.Models.Employee", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("departmentManaged")
                        .IsRequired();

                    b.Navigation("dependants");

                    b.Navigation("worksFors");
                });

            modelBuilder.Entity("Company.Models.Project", b =>
                {
                    b.Navigation("worksFors");
                });
#pragma warning restore 612, 618
        }
    }
}
